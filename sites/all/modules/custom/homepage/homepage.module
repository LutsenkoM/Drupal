<?php
/**
 * @file
 * A block module that displays recent blog and forum posts.
 *
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function homepage_preprocess_page(&$variables) {
}

/**
 * Implements hook_menu().
 */
function homepage_menu() {
  $items = [];

  $items['admin/custom_tab/custom_homepage'] = array(
    'title' => 'Custom homepage',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('access administration pages'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('homepage_form'),
  );

  $items['custom_homepage'] = array(
    'title' => variable_get('custom_homepage','Custom homepage'),
    'page callback' => 'homepage_render_page',
    'access arguments' => array('access homepage content'),
    'type' => MENU_NORMAL_ITEM, // Will appear in Navigation menu.
    'test' => 'test variable'
  );

  return $items;
}

/***
 * Forms types
* https://api.drupal.org/api/drupal/developer%21topics%21forms_api_reference.html/7.x
***/
function homepage_form($form, &$form_state) { //https://api.drupal.org/api/drupal/developer%21topics%21forms_api_reference.html/7.x#vertical_tabs
  $form['custom_homepage'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#default_value' => variable_get('custom_homepage', 'Custom homepage'),
    '#size' => 100,
    '#maxlength' => 100,
    '#required' => TRUE,
  );
  $form['checkbox'] = array(
    '#type' => 'checkbox',
    '#default_value' => variable_get('checkbox', 0),
    '#title' => t('Check to show block on page')
  );
  $form['description'] = array(
    '#type' => 'text_format',
    '#title' => t('Description'),
    '#format' => 'full_html',
    '#weight' => 0,
    '#default_value' => variable_get('description')['value']
  );

  $active = array(0 => t('none'), 1 => t('Red'), 2 => t('Black'));
  $form['settings']['radios'] = array(
    '#type' => 'radios',
    '#title' => t('Color block'),
    '#default_value' => variable_get('radios'),
    '#options' => $active,
    '#description' => t('Background for block'),
  );

  $form['pass_confirm'] = array(
    '#type' => 'password_confirm',
    '#title' => t('Password Confirm'),
    '#size' => 25,
  );

  $form['weight'] = array(
    '#type' => 'weight',
    '#title' => t('Weight'),
    '#default_value' => variable_get('weight'),
    '#delta' => 10,
    '#description' => t('Optional.
In the menu, the heavier items will sink and the lighter items will be
positioned nearer the top.'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

//  return system_settings_form($form);

  return $form;
}

function homepage_form_submit($form, &$form_state) {

  variable_set('checkbox', $form_state['values']['checkbox']);
  variable_set('description', $form_state['values']['description']);
  variable_set('radios', $form_state['values']['radios']);

  drupal_mail(
    'homepage',
    'send_attachment',
    'lutsenko.maxim@gmail.com',
    language_default(),
    array(
      'attachments' => array($form_state['values']['attachment'])
    )
  );

}

/**
 * Implements hook_mail().
 */
function homepage_mail($key, &$message, $params) {
  if ($key == 'send_attachment') {
    $message['subject'] = 'Mail with attachment';
    $message['body'][] = variable_get('description')['value'];
  }
}
/**
 * Implements hook_theme().
 */
function homepage_theme($existing, $type, $theme, $path) {
    return array(
    'custom_homepage_theme' => array(
      'variables' => array('locations' => null, 'custom_vars' => null), // add addition variables to output here !
      'template' => 'templates/custom_homepage'
    )
  );
}

function homepage_locations() {
  $location_home_id = taxonomy_vocabulary_machine_name_load('location');
  $locations_home = entity_load('taxonomy_term', FALSE, array('vid' => $location_home_id->vid));
  $locs_home = [];

// DatabaseStatementInterface:

// execute - виконання запиту;
//fetchAllAssoc - повертає результат запиту у вигляді асоціативного масиву ключів заданого поля;
//fetchAllKeyed - повертає результат як єдиний асоціативний масив;
//fetchAssoc - вибирає наступний рядок і повертає його в якості асоціативного масиву;
//fetchCol - повертає стовпець результивного набору, як індексований масив;
//fetchField - повертає одне поле з наступного запису з результивного набору;
//getQueryString - повердає рядок запиту;
//rowCount - повертає кількість рядків, які повертають запит.
//  https://internetdevels.ua/blog/database-api
//  https://nikitakiselev.ru/article/rabota-s-bazoy-dannoy-drupal-poluchenie-rezultatov-vyborki
  foreach ($locations_home as $loc_home) {
    $sorted_teams = [];
//    $query = db_select('field_data_field_team_location','n')
//      ->fields('n', array('entity_id') )
//      ->condition('field_team_location_tid', $loc_home->tid)
//      ->execute();

    $query = db_select('field_data_field_team_location','n') // https://api.drupal.org/api/drupal/includes%21database%21database.inc/interface/DatabaseStatementInterface/7.x
//      ->fields('n', array('entity_type', 'entity_id', 'field_team_location_tid') )
            ->fields('n' )
      ->condition('field_team_location_tid', $loc_home->tid)
      ->execute()
//      ->fetchAllAssoc('field_team_location_tid'); // Array keys its this field values
//      ->fetchAllKeyed(1,2); // Return two selected columns
//      ->fetchAssoc();
    ->fetchCol(3); // Return values from column #3 (entity_id)
//      ->fetchField(3); // Return value of field #4 in first row
//    ->getQueryString(2);
    foreach ($query as $id) {

//      $sorted_teams[] = taxonomy_term_load($id->entity_id);
      $sorted_teams[] = taxonomy_term_load($id);
    }
    $loc_home->teams = $sorted_teams;
    $locs_home[] = $loc_home;
  }

  return $locs_home;
}

function homepage_variables() {
  $variables_array = [
    'check' => variable_get('checkbox', 0),
    'description' => variable_get('description'),
    'radios' => variable_get('radios')
  ];

  return $variables_array;
}

function homepage_render_page() {
  $output = array(
    '#theme' => 'custom_homepage_theme',
    '#type' => 'markup',
    '#locations' => homepage_locations(),
    '#custom_vars' => homepage_variables()
  );

  return $output;
}

/**
 * Implements hook_permission().
 */
function homepage_permission() {
  return array(
    'access homepage content' => array(
      'title' => t('Access content for the homepage module'),
    )
  );
}

function homepage_form_validate($form, &$form_state){
  $weight = $form_state['values']['weight'];

  if ($weight < 0 ){
    form_set_error('weight', t('You must choose positive number'));
  }
  if (empty($form_state['values']['pass_confirm'])){
    form_set_error('weight', t('Enter password'));
  }
}
